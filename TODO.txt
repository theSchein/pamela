# Monorepo Setup TODO List

## Phase 1: Backup and Preparation
- [ ] Create a backup branch: `git checkout -b backup-before-monorepo`
- [ ] Push backup branch: `git push origin backup-before-monorepo`
- [ ] Return to master: `git checkout master`
- [ ] Ensure all changes are committed

## Phase 2: Create Monorepo Structure
- [ ] Create directory structure:
  ```
  mkdir -p apps/agent/src
  mkdir -p apps/web/src
  mkdir -p packages/shared/src
  ```

## Phase 3: Move Backend Files
- [ ] Move agent source files:
  ```
  mv src/character.ts apps/agent/src/
  mv src/plugin.ts apps/agent/src/
  mv src/index.ts apps/agent/src/
  ```
- [ ] Move Polymarket plugin:
  ```
  mv plugin-polymarket apps/agent/
  ```
- [ ] Copy backend package.json:
  ```
  cp package.json apps/agent/package.json
  ```
- [ ] Copy TypeScript config:
  ```
  cp tsconfig.json apps/agent/
  cp tsup.config.ts apps/agent/
  ```
- [ ] Copy environment example:
  ```
  cp .env.example apps/agent/
  ```

## Phase 4: Move Frontend Files
- [ ] Move frontend source:
  ```
  mv src/frontend/* apps/web/src/
  ```
- [ ] Move Vite config:
  ```
  mv vite.config.ts apps/web/
  ```
- [ ] Create frontend package.json

## Phase 5: Update Backend Configuration
- [ ] Update apps/agent/package.json:
  - Change name to "@pamela/agent"
  - Remove frontend-related dependencies
  - Update build scripts
- [ ] Update apps/agent/tsconfig.json paths
- [ ] Create apps/agent/railway.json for backend deployment

## Phase 6: Update Frontend Configuration
- [ ] Create apps/web/package.json with:
  - Name: "@pamela/web"
  - React dependencies
  - Vite scripts
- [ ] Update apps/web/vite.config.ts paths
- [ ] Create apps/web/railway.json for frontend deployment
- [ ] Create apps/web/src/config.ts for API configuration

## Phase 7: Create Root Configuration
- [ ] Create root package.json with workspaces:
  ```json
  {
    "name": "pamela-monorepo",
    "private": true,
    "workspaces": [
      "apps/*",
      "packages/*"
    ],
    "scripts": {
      "dev": "concurrently \"npm run dev:agent\" \"npm run dev:web\"",
      "dev:agent": "cd apps/agent && npm run dev",
      "dev:web": "cd apps/web && npm run dev",
      "build": "npm run build:agent && npm run build:web",
      "build:agent": "cd apps/agent && npm run build",
      "build:web": "cd apps/web && npm run build"
    }
  }
  ```
- [ ] Install root dependencies: `npm install -D concurrently`

## Phase 8: Create Shared Package
- [ ] Create packages/shared/package.json:
  ```json
  {
    "name": "@pamela/shared",
    "version": "1.0.0",
    "main": "src/index.ts",
    "types": "src/index.ts"
  }
  ```
- [ ] Create packages/shared/src/index.ts for shared types

## Phase 9: Add API Routes to Backend
- [ ] Create apps/agent/src/api/index.ts
- [ ] Add REST endpoints:
  - POST /api/chat
  - GET /api/markets
  - GET /api/portfolio
  - WebSocket /ws
- [ ] Register API plugin in character.ts

## Phase 10: Update Frontend API Integration
- [ ] Update API calls to use environment variable
- [ ] Add WebSocket connection logic
- [ ] Update proxy configuration for development

## Phase 11: Clean Up
- [ ] Move test files to appropriate locations
- [ ] Update .gitignore for monorepo structure
- [ ] Remove old files from root
- [ ] Update CLAUDE.md with new structure

## Phase 12: Testing
- [ ] Test backend standalone: `cd apps/agent && npm run dev`
- [ ] Test frontend standalone: `cd apps/web && npm run dev`
- [ ] Test monorepo dev: `npm run dev` (from root)
- [ ] Verify API communication between services

## Phase 13: Railway Configuration
- [ ] Create two Railway services:
  - pamela-agent
  - pamela-web
- [ ] Configure environment variables:
  - Agent: All existing vars
  - Web: VITE_API_URL pointing to agent service
- [ ] Update build commands in Railway UI
- [ ] Test deployments

## Phase 14: Final Steps
- [ ] Merge changes to master
- [ ] Delete old frontend/backend branches
- [ ] Update README.md with new structure
- [ ] Document deployment process